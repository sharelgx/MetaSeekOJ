[
  {
    "type": "single",
    "question": "人们在使用计算机时所提到的Windows 通常指的是()｡",
    "options": [
      "A. 操作系统",
      "B. 多人游戏",
      "C. 上市公司",
      "D. 家居用具"
    ],
    "correct": "A",
    "explanation": "Windows是微软公司开发的一系列图形用户界面操作系统，广泛用于个人计算机等设备，并非多人游戏、上市公司或家居用具，故A正确。"
  },
  {
    "type": "single",
    "question": "万维网WWW 中存储了海量的数据资源，这里用于传输控制的协议是()｡",
    "options": [
      "A. URL",
      "B. SMTP",
      "C. HTTP",
      "D. HTML"
    ],
    "correct": "C",
    "explanation": "URL是统一资源定位符，用于定位资源；SMTP是简单邮件传输协议，用于邮件发送；HTML是超文本标记语言，用于构建网页结构；HTTP是超文本传输协议，专门用于万维网中数据的传输控制，故C正确。"
  },
  {
    "type": "single",
    "question": "下列关于C++语言的叙述，不正确的是()｡",
    "options": [
      "A. 变量都有类型",
      "B. 常量都有类型",
      "C. 常量1.0 的类型为double",
      "D. 常量'1'的类型为int"
    ],
    "correct": "D",
    "explanation": "C++中变量和常量均有明确类型（排除A、B）；带小数点的常量（如1.0）默认类型为double（排除C）；常量'1'是字符类型（char），其ASCII码值为49，并非int类型，故D错误。"
  },
  {
    "type": "single",
    "question": "不可以作为C++标识符的是()｡",
    "options": [
      "A. 0a0b",
      "B. _a_b",
      "C. _0ab",
      "D. a0b0"
    ],
    "correct": "A",
    "explanation": "C++标识符命名规则为：只能由字母、数字、下划线组成，且不能以数字开头。A选项以数字'0'开头，不符合规则；B、C、D均符合标识符命名规则，故A正确。"
  },
  {
    "type": "single",
    "question": "以下语句定义的变量占用1 字节内存的是()｡",
    "options": [
      "A. int a=1;",
      "B. int b= 'b';",
      "C. bool c = true;",
      "D. double d=1.0;"
    ],
    "correct": "C",
    "explanation": "在C++中，int类型变量通常占用4字节（排除A、B），double类型变量通常占用8字节（排除D），bool类型变量专门用于表示真假，占用1字节内存，故C正确。"
  },
  {
    "type": "single",
    "question": "如果a 是已定义的int 类型变量，以下C++语言的语句不能通过编译的是 ( )｡",
    "options": [
      "A. a=3.0;",
      "B. int a=3;",
      "C. a=3;",
      "D. a='3';"
    ],
    "correct": "B",
    "explanation": "A选项中3.0为double类型，可隐式转换为int类型赋值给a，能编译；C选项是正常的int类型赋值，能编译；D选项'3'为char类型，其ASCII码可转换为int类型赋值给a，能编译；B选项中a已定义为int类型，再次用int关键字定义会导致重复定义错误，无法编译，故B正确。"
  },
  {
    "type": "single",
    "question": "下列不是C++语言的运算符的是()｡",
    "options": [
      "A. >=",
      "B. <=",
      "C. ==",
      "D. =>"
    ],
    "correct": "D",
    "explanation": "A选项'>='是大于等于比较运算符，B选项'<='是小于等于比较运算符，C选项'=='是等于比较运算符，均为C++中的合法运算符；D选项'=>不是C++中的运算符，故D正确。"
  },
  {
    "type": "single",
    "question": "如果用三个int 类型的变量a､b 和h 分别表达梯形的上底､下底和高的长度，则下列哪个表达式可以用来计算梯形的面积?()｡",
    "options": [
      "A. h *(a+b) / 2",
      "B. 0.5 * h *(a+b)",
      "C. 0.5 *( h * a+b)",
      "D. 0.5 * h * a+b"
    ],
    "correct": "B",
    "explanation": "梯形面积公式为：面积 =（上底 + 下底）× 高 ÷ 2。A选项中均为int类型运算，除法会丢失小数部分，结果不准确；C、D选项公式错误，混淆了上底、下底的和与高的乘法顺序；B选项中0.5为double类型，使整个表达式结果为浮点型，能准确计算面积，故B正确。"
  },
  {
    "type": "single",
    "question": "已知'A'的ASCII 码为65,'1'的ASCII 码为49,'r'的ASCII 码为114，则表达式'A' +1 的计算结果为()｡",
    "options": [
      "A. 66",
      "B. 'B'",
      "C. 114",
      "D. 'r'"
    ],
    "correct": "A",
    "explanation": "在C++中，字符与整数运算时，字符会转换为其对应的ASCII码值进行计算。'A'的ASCII码为65，加1后结果为66，运算结果为int类型，并非char类型的'B'，也与'1'或'r'的ASCII码无关，故A正确。"
  },
  {
    "type": "single",
    "question": "如果a为char类型的变量，且a的值为'1'，则执行a=a+3;之后，a的值会是()｡",
    "options": [
      "A. 4",
      "B. 13",
      "C. '4'",
      "D. '13'"
    ],
    "correct": "C",
    "explanation": "'1'的ASCII码值为49，执行a=a+3后，其ASCII码值变为49+3=52，52对应的字符为'4'。a为char类型变量，运算后仍为char类型，不会是int类型的4或13，也不存在'13'这样的单字符，故C正确。"
  },
  {
    "type": "single",
    "question": "如果a 和b 均为int 类型的变量，下列表达式能够正确判断“a 是b 的倍数”的是()｡",
    "options": [
      "A. a=b * ?",
      "B. a % b=0",
      "C. a / b * b==a",
      "D. b % a==0"
    ],
    "correct": "C",
    "explanation": "A选项存在语法错误，'?'不是合法的表达式组成部分；B选项使用赋值符号'='而非比较符号'=='，语法错误；D选项判断的是“b是a的倍数”，与题意不符；C选项中，若a是b的倍数，a除以b的整数部分乘b后仍等于a，可正确判断“a是b的倍数”，故C正确。"
  },
  {
    "type": "single",
    "question": "如果a 为int 类型的变量，且a 的值为1，则下列表达式的值为'3'的是()｡",
    "options": [
      "A. a+2",
      "B. a+'2'",
      "C. 'a'+2",
      "D. (char)(a+'2')"
    ],
    "correct": "D",
    "explanation": "A选项结果为int类型的3，不是字符；B选项中'a+'2'为1+50=51（'2'的ASCII码为50），结果为int类型，不是字符；C选项中'a'的ASCII码为97，加2后为99，对应字符'c'；D选项中a+'2'为51，通过(char)强转为char类型后，51对应的字符为'3'，故D正确。"
  },
  {
    "type": "single",
    "question": "在下列代码的横线处填写()，可以使得输出是“20 10”｡<pre>#include <iostream>using namespace std;int main(){int a=10,b=20;//在此处填入代码cout<<a<<\" \"<<b<<endl;return 0;}</pre>",
    "options": [
      "A. (a, b) = (b, a);",
      "B. a = max(a, b); b = min(a, b);",
      "C. a = a + b; b = a - b; a = a - b;",
      "D. tmp = a; a = b; b = tmp;"
    ],
    "correct": "C",
    "explanation": "A选项不是C++合法的赋值语法，无法编译；B选项需包含<algorithm>头文件，且a赋值为max(a,b)后，b=min(a,b)会得到10，但代码未包含头文件，且逻辑不直接；D选项未定义tmp变量，无法编译；C选项通过算术运算实现交换：a=10+20=30，b=30-20=10，a=30-10=20，最终a=20、b=10，输出“20 10”，故C正确。"
  },
  {
    "type": "single",
    "question": "在下列代码的横线处填写()，可以使得输出是“1357”｡<pre>#include <iostream>using namespace std;int main(){for (int i=1;i<=8;//在此处填入代码cout<<i;return 0;}</pre>",
    "options": [
      "A. i++",
      "B. i + 2",
      "C. i *=2",
      "D. i +=2"
    ],
    "correct": "D",
    "explanation": "A选项i每次加1，循环中i依次为1-8，输出“12345678”；B选项i+2未赋值给i，i始终为1，导致死循环；C选项i每次乘2，循环中i依次为1、2、4、8，输出“1248”；D选项i每次加2，循环中i依次为1、3、5、7，输出“1357”，故D正确。"
  },
  {
    "type": "single",
    "question": "执行以下C++语言程序后，输出结果是()｡<pre>#include <iostream>using namespace std;int main(){int sum=0;for (int i=1;i<=20; i++)if (20%i==0)sum +=i;cout<<sum<<endl;return 0;}</pre>",
    "options": [
      "A. 20",
      "B. 42",
      "C. 22",
      "D. 210"
    ],
    "correct": "B",
    "explanation": "程序功能为计算20的所有约数之和。20的约数是能整除20的整数，即1、2、4、5、10、20，这些约数的和为1+2+4+5+10+20=42，故程序输出42，B正确。"
  },
  {
    "type": "single",
    "question": "程序员用C､C++､Python､Scratch 等编写的程序能在CPU 直接执行()｡",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "CPU只能直接执行机器语言（二进制指令）。C、C++编写的程序需经过编译转换为机器语言，Python、Scratch编写的程序需经过解释转换为机器语言，无法直接在CPU执行，故该说法错误。"
  },
  {
    "type": "single",
    "question": "计算机系统中存储的基本单位用B来表示，它代表的是字节()｡",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "A",
    "explanation": "计算机存储的基本单位“B”是“Byte”的缩写，中文译为“字节”，1字节（Byte）等于8位（Bit），用于衡量存储容量，该说法正确。"
  },
  {
    "type": "single",
    "question": "C++语言中，注释虽然很有用，但不能写太多，否则会拖慢程序运行速度｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "C++编译器在对代码进行编译时，会自动忽略所有注释内容，注释仅用于提高代码可读性，不会被编译为机器指令，因此注释的多少不会影响程序的运行速度，故该说法错误。"
  },
  {
    "type": "single",
    "question": "C++语言中，循环不能写太多层，因为层数是有限制的｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "C++语言标准中，对循环嵌套的层数没有明确的限制。只要计算机内存等硬件资源允许，开发者可根据实际需求编写多层循环（如三层、四层等），不存在“层数有限制”的说法，故该说法错误。"
  },
  {
    "type": "single",
    "question": "5.0 是一个int 类型常量｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "在C++中，int类型常量为整数形式（如5、10等），不带小数点；带有小数点的常量（如5.0、3.14等）默认类型为double（双精度浮点型），并非int类型，故该说法错误。"
  },
  {
    "type": "single",
    "question": "汉字没有对应的ASCII 码｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "A",
    "explanation": "ASCII码（美国信息交换标准代码）仅包含128个字符，涵盖英文字母、数字、标点符号及控制字符，无法表示汉字。汉字需通过GB2312、GBK、UTF-8等专门的汉字编码方案表示，故该说法正确。"
  },
  {
    "type": "single",
    "question": "如果没有break 语句，有些功能就无法实现了｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "break语句的作用是跳出当前循环或switch语句。若没有break语句，可通过调整循环条件（如使用标志变量控制循环终止）、嵌套条件判断等方式实现相同功能，不存在“有些功能无法实现”的情况，故该说法错误。"
  },
  {
    "type": "single",
    "question": "使用C++语言编写循环时，有可能导致无限循环｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "A",
    "explanation": "若循环条件始终为真（如for(;;);、while(1);），或循环变量未按预期更新（如for(int i=1;i<=10;;)），会导致循环无限执行，即无限循环。在C++中编写循环时，若逻辑处理不当，确实有可能出现无限循环，故该说法正确。"
  },
  {
    "type": "single",
    "question": "如果a为int类型的变量，且表达式(a%2==0) 的计算结果为假，说明a的值是奇数｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "A",
    "explanation": "表达式a%2==0的含义是“a除以2的余数等于0”，结果为假表示a除以2的余数不为0。在整数中，除以2余数不为0的数即为奇数，因此可说明a的值是奇数，该说法正确。"
  },
  {
    "type": "single",
    "question": "表达式sqrt(9)的计算结果为3，且结果类型为int 类型｡( )",
    "options": [
      "A. 正确",
      "B. 错误"
    ],
    "correct": "B",
    "explanation": "sqrt()是C++中的平方根函数，需包含<cmath>头文件，其函数返回值类型为double（双精度浮点型）。即使sqrt(9)的计算结果数值为3，其类型仍为double（表示为3.0），并非int类型，故该说法错误。"
  }
]