{"version":3,"file":"227.675af984c4f61ae61fb7.chunk.js","mappings":"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","sources":["webpack://ChoiceQuestionPlugin/./views/ChoiceQuestionDetail.vue","webpack://ChoiceQuestionPlugin/./views/ChoiceQuestionDetail.vue?e330","webpack://ChoiceQuestionPlugin/views/ChoiceQuestionDetail.vue","webpack://ChoiceQuestionPlugin/./views/ChoiceQuestionDetail.vue?97cb","webpack://ChoiceQuestionPlugin/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://ChoiceQuestionPlugin/./api/index.js"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"div\",\n    { staticClass: \"choice-question-detail\" },\n    [\n      _vm.question\n        ? _c(\"Panel\", { attrs: { shadow: \"\" } }, [\n            _c(\n              \"div\",\n              { attrs: { slot: \"title\" }, slot: \"title\" },\n              [\n                _c(\"Icon\", { attrs: { type: \"ios-help-circle\" } }),\n                _vm._v(\n                  \"\\n      题目 #\" +\n                    _vm._s(_vm.question._id) +\n                    \": \" +\n                    _vm._s(_vm.question.title) +\n                    \"\\n    \"\n                ),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { attrs: { slot: \"extra\" }, slot: \"extra\" },\n              [\n                !_vm.isInWrongQuestions && _vm.hasSubmitted\n                  ? _c(\n                      \"Button\",\n                      {\n                        attrs: { type: \"error\", size: \"small\" },\n                        on: { click: _vm.addToWrongQuestions },\n                      },\n                      [\n                        _c(\"Icon\", { attrs: { type: \"ios-bookmark\" } }),\n                        _vm._v(\"\\n        加入错题本\\n      \"),\n                      ],\n                      1\n                    )\n                  : _vm._e(),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"question-info\" },\n              [\n                _c(\n                  \"Row\",\n                  { attrs: { gutter: 16 } },\n                  [\n                    _c(\"Col\", { attrs: { span: 12 } }, [\n                      _c(\"div\", { staticClass: \"info-item\" }, [\n                        _c(\"span\", { staticClass: \"label\" }, [\n                          _vm._v(\"分类：\"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.question.category\n                                ? _vm.question.category.name\n                                : \"未分类\"\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"Col\", { attrs: { span: 12 } }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"info-item\" },\n                        [\n                          _c(\"span\", { staticClass: \"label\" }, [\n                            _vm._v(\"难度：\"),\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"Tag\",\n                            {\n                              attrs: {\n                                color: _vm.getDifficultyColor(\n                                  _vm.question.difficulty\n                                ),\n                              },\n                            },\n                            [\n                              _vm._v(\n                                \"\\n              \" +\n                                  _vm._s(\n                                    _vm.getDifficultyText(\n                                      _vm.question.difficulty\n                                    )\n                                  ) +\n                                  \"\\n            \"\n                              ),\n                            ]\n                          ),\n                        ],\n                        1\n                      ),\n                    ]),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"Row\",\n                  {\n                    staticStyle: { \"margin-top\": \"8px\" },\n                    attrs: { gutter: 16 },\n                  },\n                  [\n                    _c(\"Col\", { attrs: { span: 12 } }, [\n                      _c(\"div\", { staticClass: \"info-item\" }, [\n                        _c(\"span\", { staticClass: \"label\" }, [\n                          _vm._v(\"题型：\"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm.question.question_type === \"single\"\n                                ? \"单选题\"\n                                : \"多选题\"\n                            )\n                          ),\n                        ]),\n                      ]),\n                    ]),\n                    _vm._v(\" \"),\n                    _c(\"Col\", { attrs: { span: 12 } }, [\n                      _c(\"div\", { staticClass: \"info-item\" }, [\n                        _c(\"span\", { staticClass: \"label\" }, [\n                          _vm._v(\"分值：\"),\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"span\", [\n                          _vm._v(_vm._s(_vm.question.score) + \" 分\"),\n                        ]),\n                      ]),\n                    ]),\n                  ],\n                  1\n                ),\n                _vm._v(\" \"),\n                _vm.question.tags && _vm.question.tags.length > 0\n                  ? _c(\n                      \"div\",\n                      {\n                        staticClass: \"info-item\",\n                        staticStyle: { \"margin-top\": \"8px\" },\n                      },\n                      [\n                        _c(\"span\", { staticClass: \"label\" }, [\n                          _vm._v(\"标签：\"),\n                        ]),\n                        _vm._v(\" \"),\n                        _vm._l(_vm.question.tags, function (tag) {\n                          return _c(\n                            \"Tag\",\n                            {\n                              key: tag.id,\n                              staticStyle: { \"margin-right\": \"4px\" },\n                              attrs: { color: tag.color },\n                            },\n                            [\n                              _vm._v(\n                                \"\\n          \" + _vm._s(tag.name) + \"\\n        \"\n                              ),\n                            ]\n                          )\n                        }),\n                      ],\n                      2\n                    )\n                  : _vm._e(),\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"question-content\" }, [\n              _c(\"h3\", [_vm._v(\"题目描述\")]),\n              _vm._v(\" \"),\n              _c(\"div\", {\n                staticClass: \"content\",\n                domProps: { innerHTML: _vm._s(_vm.question.content) },\n              }),\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", { staticClass: \"question-options\" }, [\n              _c(\"h3\", [_vm._v(\"选项\")]),\n              _vm._v(\" \"),\n              _vm.question.question_type === \"single\"\n                ? _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"RadioGroup\",\n                        {\n                          attrs: { disabled: _vm.hasSubmitted },\n                          model: {\n                            value: _vm.selectedAnswer,\n                            callback: function ($$v) {\n                              _vm.selectedAnswer = $$v\n                            },\n                            expression: \"selectedAnswer\",\n                          },\n                        },\n                        _vm._l(_vm.question.options, function (option, index) {\n                          return _c(\n                            \"div\",\n                            {\n                              key: index,\n                              staticClass: \"option-item\",\n                              class: _vm.getOptionClass(index),\n                            },\n                            [\n                              _c(\"Radio\", { attrs: { label: index } }, [\n                                _c(\"span\", { staticClass: \"option-label\" }, [\n                                  _vm._v(\n                                    _vm._s(String.fromCharCode(65 + index)) +\n                                      \".\"\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"span\", {\n                                  staticClass: \"option-content\",\n                                  domProps: { innerHTML: _vm._s(option) },\n                                }),\n                              ]),\n                            ],\n                            1\n                          )\n                        }),\n                        0\n                      ),\n                    ],\n                    1\n                  )\n                : _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"CheckboxGroup\",\n                        {\n                          attrs: { disabled: _vm.hasSubmitted },\n                          model: {\n                            value: _vm.selectedAnswers,\n                            callback: function ($$v) {\n                              _vm.selectedAnswers = $$v\n                            },\n                            expression: \"selectedAnswers\",\n                          },\n                        },\n                        _vm._l(_vm.question.options, function (option, index) {\n                          return _c(\n                            \"div\",\n                            {\n                              key: index,\n                              staticClass: \"option-item\",\n                              class: _vm.getOptionClass(index),\n                            },\n                            [\n                              _c(\"Checkbox\", { attrs: { label: index } }, [\n                                _c(\"span\", { staticClass: \"option-label\" }, [\n                                  _vm._v(\n                                    _vm._s(String.fromCharCode(65 + index)) +\n                                      \".\"\n                                  ),\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"span\", {\n                                  staticClass: \"option-content\",\n                                  domProps: { innerHTML: _vm._s(option) },\n                                }),\n                              ]),\n                            ],\n                            1\n                          )\n                        }),\n                        0\n                      ),\n                    ],\n                    1\n                  ),\n            ]),\n            _vm._v(\" \"),\n            !_vm.hasSubmitted\n              ? _c(\n                  \"div\",\n                  { staticClass: \"submit-section\" },\n                  [\n                    _c(\n                      \"Button\",\n                      {\n                        attrs: {\n                          type: \"primary\",\n                          size: \"large\",\n                          loading: _vm.submitting,\n                          disabled: !_vm.canSubmit,\n                        },\n                        on: { click: _vm.submitAnswer },\n                      },\n                      [_vm._v(\"\\n        提交答案\\n      \")]\n                    ),\n                  ],\n                  1\n                )\n              : _vm._e(),\n            _vm._v(\" \"),\n            _vm.hasSubmitted\n              ? _c(\n                  \"div\",\n                  { staticClass: \"answer-analysis\" },\n                  [\n                    _c(\"Divider\", [_vm._v(\"答案解析\")]),\n                    _vm._v(\" \"),\n                    _c(\n                      \"div\",\n                      { staticClass: \"result-info\" },\n                      [\n                        _c(\n                          \"Alert\",\n                          {\n                            attrs: {\n                              type: _vm.isCorrect ? \"success\" : \"error\",\n                              \"show-icon\": true,\n                            },\n                          },\n                          [\n                            _c(\n                              \"span\",\n                              { attrs: { slot: \"desc\" }, slot: \"desc\" },\n                              [\n                                _vm._v(\n                                  \"\\n            \" +\n                                    _vm._s(\n                                      _vm.isCorrect\n                                        ? \"回答正确！\"\n                                        : \"回答错误！\"\n                                    ) +\n                                    \"\\n            得分：\" +\n                                    _vm._s(_vm.currentScore) +\n                                    \" / \" +\n                                    _vm._s(_vm.question.score) +\n                                    \"\\n          \"\n                                ),\n                              ]\n                            ),\n                          ]\n                        ),\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\"div\", { staticClass: \"correct-answer\" }, [\n                      _c(\"h4\", [_vm._v(\"正确答案\")]),\n                      _vm._v(\" \"),\n                      _vm.question.question_type === \"single\"\n                        ? _c(\"div\", [\n                            _c(\"span\", { staticClass: \"answer-label\" }, [\n                              _vm._v(\n                                _vm._s(\n                                  String.fromCharCode(\n                                    65 + _vm.question.correct_answer[0]\n                                  )\n                                )\n                              ),\n                            ]),\n                          ])\n                        : _c(\n                            \"div\",\n                            _vm._l(\n                              _vm.question.correct_answer,\n                              function (answer, index) {\n                                return _c(\n                                  \"span\",\n                                  {\n                                    key: index,\n                                    staticClass: \"answer-label\",\n                                    staticStyle: { \"margin-right\": \"8px\" },\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n            \" +\n                                        _vm._s(\n                                          String.fromCharCode(65 + answer)\n                                        ) +\n                                        \"\\n          \"\n                                    ),\n                                  ]\n                                )\n                              }\n                            ),\n                            0\n                          ),\n                    ]),\n                    _vm._v(\" \"),\n                    _vm.question.explanation\n                      ? _c(\"div\", { staticClass: \"explanation\" }, [\n                          _c(\"h4\", [_vm._v(\"解析\")]),\n                          _vm._v(\" \"),\n                          _c(\"div\", {\n                            staticClass: \"content\",\n                            domProps: {\n                              innerHTML: _vm._s(_vm.question.explanation),\n                            },\n                          }),\n                        ])\n                      : _vm._e(),\n                  ],\n                  1\n                )\n              : _vm._e(),\n          ])\n        : _c(\n            \"div\",\n            { staticClass: \"loading-container\" },\n            [_c(\"Spin\", { attrs: { size: \"large\" } }, [_vm._v(\"加载中...\")])],\n            1\n          ),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import mod from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChoiceQuestionDetail.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../node_modules/babel-loader/lib/index.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./ChoiceQuestionDetail.vue?vue&type=script&lang=js\"","<template>\n  <div class=\"choice-question-detail\">\n    <Panel shadow v-if=\"question\">\n      <div slot=\"title\">\n        <Icon type=\"ios-help-circle\" />\n        题目 #{{ question._id }}: {{ question.title }}\n      </div>\n      \n      <div slot=\"extra\">\n        <Button \n          type=\"error\" \n          size=\"small\" \n          @click=\"addToWrongQuestions\"\n          v-if=\"!isInWrongQuestions && hasSubmitted\"\n        >\n          <Icon type=\"ios-bookmark\" />\n          加入错题本\n        </Button>\n      </div>\n      \n      <!-- 题目信息 -->\n      <div class=\"question-info\">\n        <Row :gutter=\"16\">\n          <Col :span=\"12\">\n            <div class=\"info-item\">\n              <span class=\"label\">分类：</span>\n              <span>{{ question.category ? question.category.name : '未分类' }}</span>\n            </div>\n          </Col>\n          <Col :span=\"12\">\n            <div class=\"info-item\">\n              <span class=\"label\">难度：</span>\n              <Tag :color=\"getDifficultyColor(question.difficulty)\">\n                {{ getDifficultyText(question.difficulty) }}\n              </Tag>\n            </div>\n          </Col>\n        </Row>\n        <Row :gutter=\"16\" style=\"margin-top: 8px\">\n          <Col :span=\"12\">\n            <div class=\"info-item\">\n              <span class=\"label\">题型：</span>\n              <span>{{ question.question_type === 'single' ? '单选题' : '多选题' }}</span>\n            </div>\n          </Col>\n          <Col :span=\"12\">\n            <div class=\"info-item\">\n              <span class=\"label\">分值：</span>\n              <span>{{ question.score }} 分</span>\n            </div>\n          </Col>\n        </Row>\n        <div class=\"info-item\" style=\"margin-top: 8px\" v-if=\"question.tags && question.tags.length > 0\">\n          <span class=\"label\">标签：</span>\n          <Tag \n            v-for=\"tag in question.tags\" \n            :key=\"tag.id\"\n            :color=\"tag.color\"\n            style=\"margin-right: 4px\"\n          >\n            {{ tag.name }}\n          </Tag>\n        </div>\n      </div>\n      \n      <!-- 题目内容 -->\n      <div class=\"question-content\">\n        <h3>题目描述</h3>\n        <div class=\"content\" v-html=\"question.content\"></div>\n      </div>\n      \n      <!-- 选项 -->\n      <div class=\"question-options\">\n        <h3>选项</h3>\n        <div v-if=\"question.question_type === 'single'\">\n          <RadioGroup v-model=\"selectedAnswer\" :disabled=\"hasSubmitted\">\n            <div \n              v-for=\"(option, index) in question.options\" \n              :key=\"index\"\n              class=\"option-item\"\n              :class=\"getOptionClass(index)\"\n            >\n              <Radio :label=\"index\">\n                <span class=\"option-label\">{{ String.fromCharCode(65 + index) }}.</span>\n                <span class=\"option-content\" v-html=\"option\"></span>\n              </Radio>\n            </div>\n          </RadioGroup>\n        </div>\n        <div v-else>\n          <CheckboxGroup v-model=\"selectedAnswers\" :disabled=\"hasSubmitted\">\n            <div \n              v-for=\"(option, index) in question.options\" \n              :key=\"index\"\n              class=\"option-item\"\n              :class=\"getOptionClass(index)\"\n            >\n              <Checkbox :label=\"index\">\n                <span class=\"option-label\">{{ String.fromCharCode(65 + index) }}.</span>\n                <span class=\"option-content\" v-html=\"option\"></span>\n              </Checkbox>\n            </div>\n          </CheckboxGroup>\n        </div>\n      </div>\n      \n      <!-- 提交按钮 -->\n      <div class=\"submit-section\" v-if=\"!hasSubmitted\">\n        <Button \n          type=\"primary\" \n          size=\"large\"\n          @click=\"submitAnswer\"\n          :loading=\"submitting\"\n          :disabled=\"!canSubmit\"\n        >\n          提交答案\n        </Button>\n      </div>\n      \n      <!-- 答案解析 -->\n      <div class=\"answer-analysis\" v-if=\"hasSubmitted\">\n        <Divider>答案解析</Divider>\n        \n        <div class=\"result-info\">\n          <Alert \n            :type=\"isCorrect ? 'success' : 'error'\"\n            :show-icon=\"true\"\n          >\n            <span slot=\"desc\">\n              {{ isCorrect ? '回答正确！' : '回答错误！' }}\n              得分：{{ currentScore }} / {{ question.score }}\n            </span>\n          </Alert>\n        </div>\n        \n        <div class=\"correct-answer\">\n          <h4>正确答案</h4>\n          <div v-if=\"question.question_type === 'single'\">\n            <span class=\"answer-label\">{{ String.fromCharCode(65 + question.correct_answer[0]) }}</span>\n          </div>\n          <div v-else>\n            <span \n              v-for=\"(answer, index) in question.correct_answer\" \n              :key=\"index\"\n              class=\"answer-label\"\n              style=\"margin-right: 8px\"\n            >\n              {{ String.fromCharCode(65 + answer) }}\n            </span>\n          </div>\n        </div>\n        \n        <div class=\"explanation\" v-if=\"question.explanation\">\n          <h4>解析</h4>\n          <div class=\"content\" v-html=\"question.explanation\"></div>\n        </div>\n      </div>\n    </Panel>\n    \n    <!-- 加载状态 -->\n    <div v-else class=\"loading-container\">\n      <Spin size=\"large\">加载中...</Spin>\n    </div>\n  </div>\n</template>\n\n<script>\nimport api from '../api'\n\nexport default {\n  name: 'ChoiceQuestionDetail',\n  data() {\n    return {\n      question: null,\n      selectedAnswer: null, // 单选答案\n      selectedAnswers: [], // 多选答案\n      hasSubmitted: false,\n      submitting: false,\n      isCorrect: false,\n      currentScore: 0,\n      isInWrongQuestions: false\n    }\n  },\n  \n  computed: {\n    questionId() {\n      return this.$route.params.id\n    },\n    \n    canSubmit() {\n      if (this.question?.question_type === 'single') {\n        return this.selectedAnswer !== null\n      } else {\n        return this.selectedAnswers.length > 0\n      }\n    }\n  },\n  \n  mounted() {\n    this.getQuestionDetail()\n  },\n  \n  methods: {\n    async getQuestionDetail() {\n      try {\n        const res = await api.getQuestionDetail(this.questionId)\n        this.question = res.data.data\n      } catch (err) {\n        this.$Message.error('获取题目详情失败')\n        console.error(err)\n      }\n    },\n    \n    async submitAnswer() {\n      this.submitting = true\n      try {\n        let userAnswer\n        if (this.question.question_type === 'single') {\n          userAnswer = [this.selectedAnswer]\n        } else {\n          userAnswer = this.selectedAnswers.sort((a, b) => a - b)\n        }\n        \n        const res = await api.submitAnswer({\n          question_id: this.question._id,\n          user_answer: userAnswer\n        })\n        \n        const result = res.data.data\n        this.hasSubmitted = true\n        this.isCorrect = result.is_correct\n        this.currentScore = result.score\n        \n        this.$Message.success('提交成功！')\n      } catch (err) {\n        this.$Message.error('提交失败')\n        console.error(err)\n      } finally {\n        this.submitting = false\n      }\n    },\n    \n    async addToWrongQuestions() {\n      try {\n        await api.addToWrongQuestions({\n          question_id: this.question._id\n        })\n        this.isInWrongQuestions = true\n        this.$Message.success('已加入错题本')\n      } catch (err) {\n        this.$Message.error('加入错题本失败')\n        console.error(err)\n      }\n    },\n    \n    getDifficultyColor(difficulty) {\n      const colorMap = {\n        1: 'success',\n        2: 'warning', \n        3: 'error'\n      }\n      return colorMap[difficulty] || 'default'\n    },\n    \n    getDifficultyText(difficulty) {\n      const textMap = {\n        1: '简单',\n        2: '中等',\n        3: '困难'\n      }\n      return textMap[difficulty] || '未知'\n    },\n    \n    getOptionClass(index) {\n      if (!this.hasSubmitted) return ''\n      \n      const isCorrect = this.question.correct_answer.includes(index)\n      let isSelected = false\n      \n      if (this.question.question_type === 'single') {\n        isSelected = this.selectedAnswer === index\n      } else {\n        isSelected = this.selectedAnswers.includes(index)\n      }\n      \n      if (isCorrect) {\n        return 'option-correct'\n      } else if (isSelected && !isCorrect) {\n        return 'option-wrong'\n      }\n      \n      return ''\n    }\n  }\n}\n</script>\n\n<style scoped>\n.choice-question-detail {\n  margin: 20px;\n}\n\n.loading-container {\n  text-align: center;\n  padding: 100px 0;\n}\n\n.question-info {\n  margin-bottom: 24px;\n  padding: 16px;\n  background: #f8f8f9;\n  border-radius: 4px;\n}\n\n.info-item {\n  margin-bottom: 8px;\n}\n\n.info-item:last-child {\n  margin-bottom: 0;\n}\n\n.label {\n  font-weight: bold;\n  color: #666;\n  margin-right: 8px;\n}\n\n.question-content {\n  margin-bottom: 24px;\n}\n\n.question-content h3 {\n  margin-bottom: 12px;\n  color: #333;\n}\n\n.content {\n  line-height: 1.6;\n  color: #666;\n}\n\n.question-options h3 {\n  margin-bottom: 16px;\n  color: #333;\n}\n\n.option-item {\n  margin-bottom: 12px;\n  padding: 12px;\n  border: 1px solid #e8eaec;\n  border-radius: 4px;\n  transition: all 0.3s;\n}\n\n.option-item:hover {\n  border-color: #2d8cf0;\n  background: #f7f9fc;\n}\n\n.option-item.option-correct {\n  border-color: #19be6b;\n  background: #f0f9ff;\n}\n\n.option-item.option-wrong {\n  border-color: #ed4014;\n  background: #fff2f0;\n}\n\n.option-label {\n  font-weight: bold;\n  margin-right: 8px;\n  color: #2d8cf0;\n}\n\n.option-content {\n  line-height: 1.5;\n}\n\n.submit-section {\n  margin: 32px 0;\n  text-align: center;\n}\n\n.answer-analysis {\n  margin-top: 24px;\n}\n\n.result-info {\n  margin-bottom: 20px;\n}\n\n.correct-answer {\n  margin-bottom: 20px;\n}\n\n.correct-answer h4,\n.explanation h4 {\n  margin-bottom: 12px;\n  color: #333;\n}\n\n.answer-label {\n  display: inline-block;\n  padding: 4px 8px;\n  background: #19be6b;\n  color: white;\n  border-radius: 4px;\n  font-weight: bold;\n}\n\n.explanation .content {\n  padding: 12px;\n  background: #f8f8f9;\n  border-radius: 4px;\n  line-height: 1.6;\n}\n</style>","import { render, staticRenderFns } from \"./ChoiceQuestionDetail.vue?vue&type=template&id=cf59b808&scoped=true\"\nimport script from \"./ChoiceQuestionDetail.vue?vue&type=script&lang=js\"\nexport * from \"./ChoiceQuestionDetail.vue?vue&type=script&lang=js\"\nimport style0 from \"./ChoiceQuestionDetail.vue?vue&type=style&index=0&id=cf59b808&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cf59b808\",\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","// 简单的ajax函数，用于插件环境\nconst ajax = (url, method = 'get', options = {}) => {\n  const baseURL = '/api/'\n  const fullURL = baseURL + url\n  \n  const config = {\n    method: method.toUpperCase(),\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]')?.value || ''\n    }\n  }\n  \n  if (options.params) {\n    const searchParams = new URLSearchParams(options.params)\n    const separator = fullURL.includes('?') ? '&' : '?'\n    config.url = fullURL + separator + searchParams.toString()\n  } else {\n    config.url = fullURL\n  }\n  \n  if (options.data && ['POST', 'PUT', 'PATCH'].includes(config.method)) {\n    config.body = JSON.stringify(options.data)\n  }\n  \n  return fetch(config.url, config).then(response => {\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`)\n    }\n    return response.json().then(data => ({ data }))\n  })\n}\n\nexport default {\n  // 分类相关API\n  getCategoryList() {\n    return ajax('plugin/choice/categories/', 'get')\n  },\n  createCategory(data) {\n    return ajax('plugin/choice/categories/', 'post', {\n      data\n    })\n  },\n  updateCategory(id, data) {\n    return ajax(`plugin/choice/categories/${id}/`, 'put', {\n      data\n    })\n  },\n  deleteCategory(id) {\n    return ajax(`plugin/choice/categories/${id}/`, 'delete')\n  },\n\n  // 标签相关API\n  getTagList() {\n    return ajax('plugin/choice/tags/', 'get')\n  },\n  createTag(data) {\n    return ajax('plugin/choice/tags/', 'post', {\n      data\n    })\n  },\n  updateTag(id, data) {\n    return ajax(`plugin/choice/tags/${id}/`, 'put', {\n      data\n    })\n  },\n  deleteTag(id) {\n    return ajax(`plugin/choice/tags/${id}/`, 'delete')\n  },\n\n  // 选择题相关API\n  getQuestionList(params) {\n    return ajax('plugin/choice/questions/', 'get', {\n      params\n    })\n  },\n  getQuestionDetail(id) {\n    return ajax(`plugin/choice/questions/${id}/`, 'get')\n  },\n  createQuestion(data) {\n    return ajax('plugin/choice/questions/', 'post', {\n      data\n    })\n  },\n  updateQuestion(id, data) {\n    return ajax(`plugin/choice/questions/${id}/`, 'put', {\n      data\n    })\n  },\n  deleteQuestion(id) {\n    return ajax(`plugin/choice/questions/${id}/`, 'delete')\n  },\n\n  // 提交相关API\n  submitAnswer(data) {\n    return ajax('plugin/choice/submissions/', 'post', {\n      data\n    })\n  },\n  getSubmissionList(params) {\n    return ajax('plugin/choice/submissions/', 'get', {\n      params\n    })\n  },\n\n  // 错题本相关API\n  getWrongQuestionList(params) {\n    return ajax('plugin/choice/wrong-questions/', 'get', {\n      params\n    })\n  },\n  addToWrongQuestions(data) {\n    return ajax('plugin/choice/wrong-questions/', 'post', {\n      data\n    })\n  },\n  removeFromWrongQuestions(id) {\n    return ajax(`plugin/choice/wrong-questions/${id}/`, 'delete')\n  },\n  updateWrongQuestionNote(id, data) {\n    return ajax(`plugin/choice/wrong-questions/${id}/`, 'put', {\n      data\n    })\n  },\n\n  // 统计相关API\n  getQuestionStats() {\n    return ajax('plugin/choice/statistics/', 'get')\n  },\n\n  // 导入导出相关API\n  importQuestions(formData) {\n    return ajax('plugin/choice/import/', 'post', {\n      data: formData,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n  },\n  exportQuestions(params) {\n    return ajax('plugin/choice/export/', 'get', {\n      params,\n      responseType: 'blob'\n    })\n  },\n  downloadTemplate(format) {\n    return ajax('plugin/choice/template/', 'get', {\n      params: { format },\n      responseType: 'blob'\n    })\n  },\n  batchOperation(data) {\n    return ajax('plugin/choice/batch/', 'post', {\n      data\n    })\n  },\n  getImportHistory(params) {\n    return ajax('plugin/choice/import-history/', 'get', {\n      params\n    })\n  }\n}"],"names":["render","_vm","this","_c","_self","staticClass","question","attrs","shadow","slot","type","_v","_s","_id","title","isInWrongQuestions","hasSubmitted","size","on","click","addToWrongQuestions","_e","gutter","span","category","name","color","getDifficultyColor","difficulty","getDifficultyText","staticStyle","question_type","score","tags","length","_l","tag","key","id","domProps","innerHTML","content","disabled","model","value","selectedAnswer","callback","$$v","expression","options","option","index","class","getOptionClass","label","String","fromCharCode","selectedAnswers","loading","submitting","canSubmit","submitAnswer","isCorrect","currentScore","correct_answer","answer","explanation","_withStripped","data","computed","questionId","$route","params","mounted","getQuestionDetail","methods","res","api","err","$Message","error","console","userAnswer","sort","a","b","result","question_id","user_answer","is_correct","success","includes","isSelected","normalizeComponent","scriptExports","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","ajax","url","method","fullURL","config","toUpperCase","headers","document","querySelector","searchParams","URLSearchParams","separator","toString","body","JSON","stringify","fetch","then","response","ok","Error","status","json","getCategoryList","createCategory","updateCategory","deleteCategory","getTagList","createTag","updateTag","deleteTag","getQuestionList","createQuestion","updateQuestion","deleteQuestion","getSubmissionList","getWrongQuestionList","removeFromWrongQuestions","updateWrongQuestionNote","getQuestionStats","importQuestions","formData","exportQuestions","responseType","downloadTemplate","format","batchOperation","getImportHistory"],"sourceRoot":""}