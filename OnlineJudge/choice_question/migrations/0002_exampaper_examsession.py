# Generated by Django 4.2.23 on 2025-09-01 16:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('choice_question', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamPaper',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_update_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('plugin_version', models.CharField(default='1.0.0', max_length=20, verbose_name='插件版本')),
                ('title', models.CharField(max_length=200, verbose_name='试卷标题')),
                ('description', models.TextField(blank=True, verbose_name='试卷描述')),
                ('duration', models.IntegerField(verbose_name='考试时长(分钟)')),
                ('total_score', models.IntegerField(default=100, verbose_name='总分')),
                ('question_count', models.IntegerField(verbose_name='题目数量')),
                ('difficulty_distribution', models.JSONField(default=dict, help_text="格式: {'easy': 5, 'medium': 3, 'hard': 2}", verbose_name='难度分布')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('categories', models.ManyToManyField(blank=True, to='choice_question.category', verbose_name='题目分类')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
                ('tags', models.ManyToManyField(blank=True, to='choice_question.questiontag', verbose_name='题目标签')),
            ],
            options={
                'verbose_name': '试卷',
                'verbose_name_plural': '试卷',
                'db_table': 'choice_exam_paper',
                'ordering': ['-create_time'],
            },
        ),
        migrations.CreateModel(
            name='ExamSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('last_update_time', models.DateTimeField(auto_now=True, verbose_name='最后更新时间')),
                ('plugin_version', models.CharField(default='1.0.0', max_length=20, verbose_name='插件版本')),
                ('status', models.CharField(choices=[('created', '已创建'), ('started', '进行中'), ('submitted', '已提交'), ('timeout', '超时')], default='created', max_length=20, verbose_name='状态')),
                ('start_time', models.DateTimeField(blank=True, null=True, verbose_name='开始时间')),
                ('end_time', models.DateTimeField(blank=True, null=True, verbose_name='结束时间')),
                ('submit_time', models.DateTimeField(blank=True, null=True, verbose_name='提交时间')),
                ('questions', models.JSONField(help_text='存储题目ID列表', verbose_name='题目列表')),
                ('answers', models.JSONField(default=dict, verbose_name='答案记录')),
                ('score', models.IntegerField(blank=True, null=True, verbose_name='得分')),
                ('correct_count', models.IntegerField(default=0, verbose_name='正确题数')),
                ('total_count', models.IntegerField(default=0, verbose_name='总题数')),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='choice_question.exampaper', verbose_name='试卷')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='考生')),
            ],
            options={
                'verbose_name': '考试会话',
                'verbose_name_plural': '考试会话',
                'db_table': 'choice_exam_session',
                'ordering': ['-create_time'],
                'unique_together': {('paper', 'user')},
            },
        ),
    ]
