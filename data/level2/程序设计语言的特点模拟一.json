[
    {
      "id": "1",
      "type": "single",
      "question": "以下哪一项属于高级程序设计语言？( )",
      "options": ["A. 机器语言", "B. 汇编语言", "C. C++语言", "D. 二进制代码"],
      "correct": "C",
      "explanation": "C++是高级语言，具有结构化、面向对象等特点；机器语言和汇编语言属于低级语言。",
      "source": "模拟题"
    },
    {
      "id": "2",
      "type": "single",
      "question": "关于解释型语言与编译型语言的说法，正确的是( )",
      "options": [
        "A. 编译型语言不需要编译器",
        "B. 解释型语言执行效率更高",
        "C. 编译型语言在运行前需要先编译成可执行文件",
        "D. 解释型语言无法运行大型程序"
      ],
      "correct": "C",
      "explanation": "C++等编译型语言需先通过编译器生成可执行程序；解释型语言逐行解释执行，效率相对较低。",
      "source": "模拟题"
    },
    {
      "id": "3",
      "type": "single",
      "question": "下列语言中，属于解释型语言的是( )",
      "options": ["A. C++", "B. Java", "C. Python", "D. 汇编语言"],
      "correct": "C",
      "explanation": "Python 是典型的解释型语言；C++为编译型；Java介于中间，采用“编译 + 解释”混合模式。",
      "source": "模拟题"
    },
    {
      "id": "4",
      "type": "truefalse",
      "question": "机器语言是最接近硬件的语言，直接使用0和1表示指令。(对/错)",
      "correct": "√",
      "explanation": "说法正确，机器语言使用二进制编码直接被CPU识别。",
      "source": "模拟题"
    },
    {
      "id": "5",
      "type": "truefalse",
      "question": "汇编语言比高级语言更容易理解和编写。(对/错)",
      "correct": "×",
      "explanation": "汇编语言虽然比机器语言好理解，但仍远不如高级语言容易学习和维护。",
      "source": "模拟题"
    },
    {
      "id": "6",
      "type": "single",
      "question": "关于程序语言的发展，下列说法正确的是( )",
      "options": [
        "A. 汇编语言比机器语言更难理解",
        "B. 高级语言可以直接被CPU识别执行",
        "C. 编译器将高级语言翻译为机器语言",
        "D. Python 是一种编译型语言"
      ],
      "correct": "C",
      "explanation": "编译器的作用是将高级语言翻译为机器语言。B错误，高级语言需翻译才能被执行。",
      "source": "模拟题"
    },
    {
      "id": "7",
      "type": "single",
      "question": "下列关于编译型语言的特点，错误的是( )",
      "options": [
        "A. 程序需要先编译后执行",
        "B. 执行速度通常快于解释型语言",
        "C. 编译型语言代码可直接运行",
        "D. 常见编译型语言有C、C++等"
      ],
      "correct": "C",
      "explanation": "C错误，编译型语言的源代码不能直接运行，必须先编译成可执行文件。",
      "source": "模拟题"
    },
    {
      "id": "8",
      "type": "single",
      "question": "下列关于解释型语言的说法中，正确的是( )",
      "options": [
        "A. 每次运行程序都需重新编译",
        "B. 程序运行速度通常快于编译型语言",
        "C. 源代码可在运行时直接执行",
        "D. 常用于操作系统底层开发"
      ],
      "correct": "C",
      "explanation": "解释型语言如Python在运行时逐行解释源代码，直接执行。",
      "source": "模拟题"
    },
    {
      "id": "9",
      "type": "truefalse",
      "question": "高级语言可读性更强，适合人类理解和编写。(对/错)",
      "correct": "√",
      "explanation": "说法正确。高级语言语法接近自然语言，便于人类理解和维护。",
      "source": "模拟题"
    },
    {
      "id": "10",
      "type": "truefalse",
      "question": "汇编语言可以直接在不同类型的CPU上通用运行。(对/错)",
      "correct": "×",
      "explanation": "汇编语言与CPU架构紧密相关，指令集不同则不能兼容运行。",
      "source": "模拟题"
    },
    {
      "id": "11",
      "type": "single",
      "question": "以下关于C++语言的说法，错误的是( )",
      "options": [
        "A. 属于高级程序设计语言",
        "B. 是一种面向对象的语言",
        "C. 支持结构化程序设计",
        "D. 是一种解释型语言"
      ],
      "correct": "D",
      "explanation": "C++是编译型语言，源代码需编译器编译后运行。",
      "source": "模拟题"
    },
    {
      "id": "12",
      "type": "single",
      "question": "下列哪个选项表示语言的可移植性优势？( )",
      "options": [
        "A. 语言只能在某一平台运行",
        "B. 语言执行效率越低越好",
        "C. 一段程序可在多种系统上运行",
        "D. 程序必须重新设计后才能运行"
      ],
      "correct": "C",
      "explanation": "可移植性是指同一程序可在不同平台上运行，体现高级语言优势。",
      "source": "模拟题"
    },
    {
      "id": "13",
      "type": "single",
      "question": "以下哪种语言被广泛应用于数据分析与人工智能？( )",
      "options": ["A. 汇编", "B. Python", "C. C++", "D. HTML"],
      "correct": "B",
      "explanation": "Python具备强大库支持，广泛应用于数据科学、AI领域。",
      "source": "模拟题"
    },
    {
      "id": "14",
      "type": "truefalse",
      "question": "C++是解释型语言，而Python是编译型语言。(对/错)",
      "correct": "×",
      "explanation": "说法错误，C++是编译型，Python是解释型。",
      "source": "模拟题"
    },
    {
      "id": "15",
      "type": "truefalse",
      "question": "解释型语言的优点是调试方便、跨平台性强。(对/错)",
      "correct": "√",
      "explanation": "解释型语言如Python跨平台性能优越，调试时无需重新编译。",
      "source": "模拟题"
    },
    {
      "id": "16",
      "type": "single",
      "question": "编译器的主要作用是( )",
      "options": ["A. 保存程序", "B. 运行程序", "C. 翻译程序成机器码", "D. 编辑注释"],
      "correct": "C",
      "explanation": "编译器负责将高级语言代码翻译为机器语言，可执行的程序。",
      "source": "模拟题"
    },
    {
      "id": "17",
      "type": "single",
      "question": "下列关于程序设计语言分类的说法，错误的是( )",
      "options": [
        "A. 高级语言可被编译器或解释器处理",
        "B. 汇编语言比机器语言更接近人类语言",
        "C. Java属于解释型语言",
        "D. 低级语言适用于硬件开发"
      ],
      "correct": "C",
      "explanation": "Java是编译 + 解释混合型语言，先编译为字节码，再由虚拟机解释执行。",
      "source": "模拟题"
    },
    {
      "id": "18",
      "type": "truefalse",
      "question": "编译型语言在运行前必须进行编译，生成可执行文件。(对/错)",
      "correct": "√",
      "explanation": "编译型语言如C++先编译为可执行文件，再运行。",
      "source": "模拟题"
    },
    {
      "id": "19",
      "type": "truefalse",
      "question": "解释型语言在运行时逐行翻译执行，效率通常较低。(对/错)",
      "correct": "√",
      "explanation": "解释型语言边翻译边执行，因此执行效率通常低于编译型语言。",
      "source": "模拟题"
    },
    {
      "id": "20",
      "type": "truefalse",
      "question": "C++和Python都属于机器语言。(对/错)",
      "correct": "×",
      "explanation": "C++和Python都属于高级语言，机器语言指的是仅由0和1构成的硬件可识别语言。",
      "source": "模拟题"
    }
  ]
  