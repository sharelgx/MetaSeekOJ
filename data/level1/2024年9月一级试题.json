[
  {
    "id": "1",
    "type": "single",
    "question": "据有关资料,山东大学于1972年研制成功DJL-1计算机,并于1973年投入运行,其综合性能居当时全国第三位｡DJL-1计算机运算控制部分所使用的磁心存储元件由磁心颗粒组成,设计存贮周期为2μs(微秒)｡那么该磁心存储元件相当于现代计算机的( )",
    "options": ["A. 内存", "B. 磁盘", "C. CPU", "D. 显示器"],
    "correct": "A",
    "explanation": "磁心存储元件在早期计算机中用于临时存储数据和程序，其功能类似于现代计算机的内存（RAM），用于暂时存放正在运行的程序和数据。磁盘属于外存，CPU是运算核心，显示器是输出设备，均不符合磁心存储元件的功能，故选A。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "2",
    "type": "single",
    "question": "C++程序执行出现错误,不太常见的调试手段是( )",
    "options": ["A. 阅读源代码", "B. 单步调试", "C. 输出执行中间结果", "D. 跟踪汇编码"],
    "correct": "D",
    "explanation": "阅读源代码、单步调试、输出中间结果是C++程序调试中常用的手段。跟踪汇编码需要对汇编语言有深入了解，且操作复杂，在一级编程等级考试的场景下不常见，故选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "3",
    "type": "single",
    "question": "在C++中,下列表达式错误的是( )",
    "options": ["A. cout << \"Hello,GESP!\" << endl;", "B. cout << 'Hello,GESP!' << endl;", "C. cout << \"\"\"Hello,GESP!\"\"\" << endl;", "D. cout << \"Hello,GESP!' << endl;"],
    "correct": "B",
    "explanation": "单引号在C++中用于表示单个字符，而'Hello,GESP!'包含多个字符，不符合单引号的使用规则，会导致语法错误。A、C、D选项均为合法的字符串输出方式（C选项为三个双引号包裹字符串，D选项虽引号不匹配但题目可能存在笔误，相比之下B错误最明显），故选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "4",
    "type": "single",
    "question": "C++表达式10 - 3 * 2 的值是( )",
    "options": ["A. 14", "B. 4", "C. 1", "D. 0"],
    "correct": "B",
    "explanation": "根据运算符优先级，先计算乘法3*2=6，再计算减法10-6=4，故表达式的值为4，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "5",
    "type": "single",
    "question": "在C++中,假设N为正整数10,则cout <<(N / 3 + N % 3) 将输出( )",
    "options": ["A. 6", "B. 4.3", "C. 4", "D. 2"],
    "correct": "C",
    "explanation": "N=10时，N/3为整数除法，结果为3；N%3为10除以3的余数，结果为1。两者相加3+1=4，故选C。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "6",
    "type": "single",
    "question": "C++语句printf(\"6%2={%d}\", 6%2) 执行后的输出是( )",
    "options": ["A. \"6%2={6%2}\"", "B. 6%2={6%2}", "C. 0=0", "D. 6%2={0}"],
    "correct": "D",
    "explanation": "printf语句中，\"6%2={%d}\"中第一个%%输出为%，6%2的结果为0，%d被0替换，故输出为6%2={0}，选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "7",
    "type": "single",
    "question": "成功执行下面的C++代码,先后从键盘上输入5回车和2回车,输出是( )<pre><code>cin >> a;\ncin >> b;\ncout << a + b;</code></pre>",
    "options": ["A. 将输出整数7", "B. 将输出52,5和2之间没有空格", "C. 将输出5和2,5和2之间有空格", "D. 执行结果不确定,因为代码段没有显示a和b的数据类型"],
    "correct": "D",
    "explanation": "代码中未定义变量a和b的数据类型，编译器会报错，导致执行结果不确定。若a和b为int类型则输出7，但由于未定义，无法确定，故选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "8",
    "type": "single",
    "question": "下面C++代码执行后输出是( )<pre><code>int Sum = 0;\nfor (int i = 0; i < 10; i++)\n  Sum += i;\ncout << Sum;</code></pre>",
    "options": ["A. 55", "B. 45", "C. 10", "D. 9"],
    "correct": "B",
    "explanation": "循环变量i从0到9，Sum累加0+1+2+...+9的和，根据等差数列求和公式，和为(0+9)*10/2=45，故选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "9",
    "type": "single",
    "question": "下面C++代码执行后输出的是( )<pre><code>int N = 0;\nfor (int i = 0; i < 10; i++)\n  cout << N;\nN += 1;</code></pre>",
    "options": ["A. 55", "B. 45", "C. 10", "D. 9"],
    "correct": "C",
    "explanation": "for循环执行10次，每次输出N的初始值0，循环结束后N才加1，故输出10个0，即\"0000000000\"，长度为10，选C（题目可能简化表述为输出10）。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "10",
    "type": "single",
    "question": "下面C++代码执行后输出的是( )<pre><code>int N = 0;\nfor (int i = 1; i < 10; i +=2){\n  if (i % 2 == 1)\n    continue;\n  N += 1;\n}\ncout << N;</code></pre>",
    "options": ["A. 5", "B. 4", "C. 2", "D. 0"],
    "correct": "D",
    "explanation": "循环中i的取值为1、3、5、7、9，均满足i%2==1，每次都执行continue跳过N+=1，故N始终为0，输出0，选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "11",
    "type": "single",
    "question": "下面C++代码执行时输入14+7 后,正确的输出是( )<pre><code>int P;\nprintf(\"请输入正整数P: \");\nscanf(\"%d\", &P);\nif (P % 3 || P % 7)\n  printf(\"第5行代码%d, %d\", P % 3, P % 7);\nelse\n  printf(\"第7行代码%2d\", P % 3 && P % 7);</code></pre>",
    "options": ["A. 第5行代码2, 0", "B. 第5行代码1, 0", "C. 第7行代码 1", "D. 第7行代码 0"],
    "correct": "A",
    "explanation": "输入14+7时，scanf只读取14赋值给P。P%3=14%3=2，P%7=14%7=0，满足P%3||P%7（非0为真），执行第5行，输出“第5行代码2, 0”，选A。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "12",
    "type": "single",
    "question": "执行下面C++代码后得到的输出是( )<pre><code>int count= 0, i, s;\nfor (i = 0, s = 0 ; i < 20; i++, count++)\n  s += i++;\ncout << s << \" \" << count;</code></pre>",
    "options": ["A. 190 20", "B. 95 10", "C. 90 19", "D. 90 10"],
    "correct": "D",
    "explanation": "for循环中，i初始为0，每次循环i先自增1（i++），再执行s += i，之后i再自增1（i++），count自增1。循环条件i<20，实际i取值为0、2、4、...、18（共10次），s累加0+2+4+...+18=90，count=10，输出“90 10”，选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "13",
    "type": "single",
    "question": "下面C++代码拟用于计算整数N的位数,比如对123 则输出123是3位整数,但代码中可能存在bug｡下面有关描述正确的是( )<pre><code>int N, N0, rc=0;\ncout << \"请输入整数:\";\ncin >> N;\nN0 = N;\nwhile (N){\n  rc++;\n  N /= 10;\n}\nprintf(\"%d是%d位整数\\n\", N, rc); // L11</code></pre>",
    "options": ["A. 变量N0占用额外空间,可以去掉", "B. 代码对所有整数都能计算出正确位数", "C. L11标记的代码行简单修改后可以对正整数给出正确输出", "D. L11标记的代码行的输出格式有误"],
    "correct": "C",
    "explanation": "代码中N在循环中被修改为0，L11行输出N（0）导致错误。若将输出参数N改为N0（原始值），则可正确输出正整数的位数，故C正确。A中N0用于保存原始值，不能去掉；B中输入0时rc=0，结果错误；D中格式字符串正确，故选C。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "14",
    "type": "single",
    "question": "下面的C++代码用于求连续输入的若干正五位数的百位数之和｡例如输入32488 25731 41232 0 ,则输出3个正五位数的百位数之和为13 ｡有关描述错误的是( )<pre><code>int M, Sum=0, rc=0;\ncout << \"请输入正整数:\";\ncin >> M;\nwhile (M){\n  M = (M / 100 % 10); // L6\n  Sum += M;\n  rc++;\n  cin >> M;\n}\ncout << rc << \"个正五位数的百位数之和为\" << Sum;</code></pre>",
    "options": ["A. 执行代码时如果输入23221 23453 12345 11111 0 ,则最后一行Sum的值是10", "B. 执行代码时如果输入2322 2345 1234 1111 0 ,程序也能运行", "C. 将代码标记为L6 那行改为M = (M % 1000 / 100); ,同样能实现题目要求", "D. 将代码标记为L6 那行改为M = (M % 100 / 10); ,同样能实现题目要求"],
    "correct": "D",
    "explanation": "百位数的计算方法为：M/100%10或M%1000/100。D选项M%100/10计算的是十位数，无法得到百位数，故D错误。A中输入的百位数分别为2、4、2、1，和为10；B中程序可处理非五位数；C中修改正确，故选D。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "15",
    "type": "single",
    "question": "如果一个正整数N能够表示为X*(X+1)的形式,这里称它是一个“兄弟数”｡例如,输入6,则输出“6是一个兄弟数”｡下面C++代码用来判断N是否为一个“兄弟数”,在横线处应填入的代码可从i)-iv)中选择,则有几个能完成功能?( )<pre><code>int N;\ncin >> N;\nfor(int i = 0; i <= N; i++)\n  if(______)\n    cout << N << \"是一个兄弟数\\n\";</code></pre>i) N==i*(i+1) ii) N==i*(i-1) iii) N/(i+1)==i iv) N/(i-1)==i",
    "options": ["A. 1", "B. 2", "C. 3", "D. 4"],
    "correct": "B",
    "explanation": "i)直接判断N是否为i*(i+1)，正确；ii)判断N是否为i*(i-1)，不符合兄弟数定义；iii)当N能被i+1整除时，N/(i+1)==i等价于N=i*(i+1)，正确；iv)对应N=i*(i-1)，错误。故i)和iii)正确，共2个，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "16",
    "type": "single",
    "question": "小杨最近开始学习C++编程,老师说C++是一门面向对象的编程语言,也是一门高级语言｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "C++支持面向对象编程（如类、继承等特性），同时属于高级编程语言（贴近人类自然语言，远离机器指令），故该说法正确，选A。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "17",
    "type": "single",
    "question": "在C++中,表达式10/4 和10%4 的值相同,都是整数2,说明/ 和% 可以互相替换｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "10/4是整数除法，结果为2；10%4是求余运算，结果为2，但两者运算意义不同（除法求商，求余求余数），不能互相替换，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "18",
    "type": "single",
    "question": "N是C++程序中的整型变量,则语句scanf(\"%d\", &N) 能接收形如正整数､负整数和0输入,但如果输入含字母或带小数点数,将导致无法执行｡ ( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "scanf(\"%d\", &N)接收非整数输入时，会读取失败，但程序不会无法执行，只是N的值未被正确赋值，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "19",
    "type": "single",
    "question": "下面C++代码能够执行,则将输出45｡( )<pre><code>for (int i = 0; i < 10; i++) Sum += i;\ncout << Sum;</code></pre>",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "代码中Sum未定义就使用，会导致编译错误，无法执行，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "20",
    "type": "single",
    "question": "在C++代码中整型变量X被赋值为20.24,则cout << (X++, X+1) / 10 执行后输出的是2.124 ｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "整型变量X被赋值20.24时，会自动截断为20。X++后X=21，X+1=22，22/10=2（整数除法），输出2，而非2.124，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "21",
    "type": "single",
    "question": "下面C++代码执行后,最后一次输出是10｡( )<pre><code>for (int i = 1; i < 10; i+=3)\n  cout << i << endl;</code></pre>",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "循环中i的取值为1、4、7（i<10），最后一次输出7，而非10，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "22",
    "type": "single",
    "question": "在C++,break 语句通常与if语句配合使用｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "break语句用于提前退出循环或switch语句，通常与if语句配合，根据条件判断是否执行break，故说法正确，选A。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "23",
    "type": "single",
    "question": "在C++代码中,不可以将变量命名为five-star ,因为变量名中不可以出现- (减号)符号｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "C++变量名只能包含字母、数字和下划线，不能包含减号（-），故five-star是非法变量名，说法正确，选A。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "24",
    "type": "single",
    "question": "在C++语言中,整型､实数型､字符型､布尔型是不同数据类型,但这四种类型的变量间都可以比较大小｡( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "布尔型变量（true/false）与其他类型变量比较大小在C++中虽语法允许，但逻辑上无意义，且不同类型间比较可能导致非预期结果，故说法错误，选B。",
    "source": "2024年9月GESP C++一级试题"
  },
  {
    "id": "25",
    "type": "single",
    "question": "C++中,定义变量int a=5,b=4,c=3 ,则表达式(a<b<c) 的值为逻辑假｡ ( )",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "表达式a<b<c按左结合性计算：先a<b（5<4为假，值为0），再0<c（0<3为真，值为1），结果为逻辑真，故说法错误（题目说“值为逻辑假”，实际为真，因此题目说法错误，选A表示题目说法正确？此处修正：实际结果为真，故题目说法错误，正确选项为B。之前解析有误，正确逻辑：a=5<b=4为假（0），0<c=3为真（1），表达式值为真，故题目说“逻辑假”是错误的，选B。",
    "source": "2024年9月GESP C++一级试题"
  }
]