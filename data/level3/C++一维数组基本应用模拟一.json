[
    {
        "id": "1",
        "type": "single",
        "question": "下列C++数组初始化方式中，会导致编译错误的是（ ）",
        "options": [
            "A. int arr[] = {1, 2, 3, 4};",
            "B. char str[] = \"GESP\";",
            "C. double arr[3] = {1.1, 2.2};",
            "D. int arr[2] = {1, 2, 3};"
        ],
        "correct": "D",
        "explanation": "D选项中，数组长度为2，但初始化列表提供了3个元素，超出数组长度，会导致编译错误。A选项自动推导数组长度，正确；B选项字符串初始化字符数组，正确；C选项允许部分初始化，剩余元素默认初始化，正确。",
        "source": "模拟题"
    },
    {
        "id": "2",
        "type": "single",
        "question": "若定义数组int arr[][3] = {{1, 2}, {3, 4, 5}, {6}};，则数组arr的行数是（ ）",
        "options": ["A. 2", "B. 3", "C. 4", "D. 不确定"],
        "correct": "B",
        "explanation": "二维数组初始化时，行数由初始化列表的大括号层数决定，即使部分行元素不足，也会按层数确定行数。本题有3个大括号组，故行数为3，B正确。",
        "source": "模拟题"
    },
    {
        "id": "3",
        "type": "single",
        "question": "下列关于动态数组的说法中，正确的是（ ）",
        "options": [
            "A. int* arr = new int; 定义了长度为1的动态数组",
            "B. delete[] arr; 可释放动态数组内存",
            "C. int arr[] = new int[5]; 是合法的动态数组定义",
            "D. 动态数组的长度在运行时不可改变"
        ],
        "correct": "B",
        "explanation": "A选项new int创建单个整数，非数组；B选项delete[]用于释放动态数组内存，正确；C选项语法错误，动态数组应通过指针接收；D选项动态数组可通过重新分配内存改变长度（如realloc），但原说法不准确。",
        "source": "模拟题"
    },
    {
        "id": "4",
        "type": "single",
        "question": "字符数组char str[10] = \"hello\";，则str[5]的值是（ ）",
        "options": ["A. 'o'", "B. '\\0'", "C. 不确定", "D. 编译错误"],
        "correct": "B",
        "explanation": "字符串\"hello\"自动添加结尾'\\0'，存储在数组索引5的位置，故str[5]为'\\0'，B正确。",
        "source": "模拟题"
    },
    {
        "id": "5",
        "type": "single",
        "question": "下列数组定义中，元素类型与其他选项不同的是（ ）",
        "options": [
            "A. int arr[5];",
            "B. short arr[5];",
            "C. long arr[5];",
            "D. char arr[5];"
        ],
        "correct": "D",
        "explanation": "A、B、C选项均为整型数组，D选项为字符型数组，元素类型不同，故D正确。",
        "source": "模拟题"
    },
    {
        "id": "6",
        "type": "truefalse",
        "question": "在C++中，数组名作为函数参数传递时，会退化为指针。（对/错）",
        "correct": "√",
        "explanation": "当数组名作为函数参数时，会隐式转换为指向数组首元素的指针，因此本质上传递的是地址，故正确。",
        "source": "模拟题"
    },
    {
        "id": "7",
        "type": "truefalse",
        "question": "定义数组int arr[5] = {0};时，只有第一个元素被初始化为0，其余元素未初始化。（对/错）",
        "correct": "×",
        "explanation": "当数组部分初始化时，未指定的元素会被默认初始化为0（整型数组），因此所有元素均为0，故错误。",
        "source": "模拟题"
    },
    {
        "id": "8",
        "type": "truefalse",
        "question": "字符串数组char strs[][10] = {\"GESP\", \"Test\"};中，每个元素是长度为10的字符数组。（对/错）",
        "correct": "√",
        "explanation": "二维字符数组中，每个元素是固定长度的字符数组（此处为10），字符串长度不足时补'\\0'，故正确。",
        "source": "模拟题"
    },
    {
        "id": "9",
        "type": "single",
        "question": "数组int arr[4] = {1, 3, 5, 7};中，arr[1] + arr[3]的值是（ ）",
        "options": ["A. 8", "B. 10", "C. 12", "D. 14"],
        "correct": "B",
        "explanation": "arr[1]为3，arr[3]为7，两者之和为10，故B正确。",
        "source": "模拟题"
    },
    {
        "id": "10",
        "type": "single",
        "question": "下列代码执行后输出结果是（ ）\nint arr[] = {2, 4, 6, 8}; \ncout << sizeof(arr) / sizeof(arr[0]);",
        "options": ["A. 1", "B. 2", "C. 3", "D. 4"],
        "correct": "D",
        "explanation": "sizeof(arr)获取数组总字节数（4×4=16），sizeof(arr[0])为单个元素大小（4），16/4=4，因此D正确。",
        "source": "模拟题"
    }
]
