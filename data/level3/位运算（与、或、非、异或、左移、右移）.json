[
    {
        "id": "1",
        "type": "single",
        "question": "已知大写字符'A'的ASCII编码的十六进制表示为0x41，则字符'L'的ASCII编码的十六进制表示为（ ）",
        "options": ["A. 4A", "B. 4B", "C. 4C", "D. 52"],
        "correct": "C",
        "explanation": "已知'A'的ASCII值是65，'L'比'A'大11，65 + 11 = 76。将76转换为十六进制，76÷16 = 4余12（十六进制中用C表示），所以'L'的ASCII编码的十六进制表示为4C 。",
        "source": "2023年9月认证C++三级真题 单选题第3题"
    },
    {
        "id": "2",
        "type": "single",
        "question": "已知大写字符'A'的ASCII编码的十六进制表示为0x41，则字符'F'的ASCII编码的十六进制表示为（ ）",
        "options": ["A. 46", "B. 47", "C. 48", "D. 49"],
        "correct": "A",
        "explanation": "因为'A'的ASCII编码十六进制表示为0x41，'F'比'A'大5，41（十六进制） + 5（十进制） = 46（十六进制） ，所以字符'F'的ASCII编码十六进制表示为46。",
        "source": "2023年6月认证C++三级真题 单选题第3题"
    },
    {
        "id": "3",
        "type": "single",
        "question": "如果a是int类型的变量，下列哪个表达式的值一定为true？（ ）",
        "options": ["A. a + 1000 - 1000 == a", "B. a * 2 / 2 == a", "C. (a & 1) == 1", "D. (a | 1) == a + 1"],
        "correct": "A",
        "explanation": "A选项中，先计算a + 1000 - 1000，结果就是a，所以a + 1000 - 1000 == a恒成立；B选项中，如果a导致a * 2越界，那么a * 2 / 2 == a就不成立；C选项中，只有当a是奇数时，(a & 1) == 1才成立；D选项中，当a是奇数时，(a | 1)不等于a + 1 。",
        "source": "2023年9月认证C++三级真题 单选题第10题"
    },
    {
        "id": "4",
        "type": "single",
        "question": "如果a和b均为int类型的变量，下列表达式不能正确判断“a等于b”的是（ ）",
        "options": ["A. ((a >= b) && (a <= b))", "B. ((a>>1)==(b>>1))", "C. ((a + b)==(a + a))", "D. ((a ^ b)==0)"],
        "correct": "B",
        "explanation": "A选项，((a >= b) && (a <= b))，当a大于等于b且a小于等于b时，a必然等于b，该表达式可以正确判断；B选项，例如a = 4，b = 5，a >> 1 = 2，b >> 1 = 2，但a并不等于b，所以该表达式不能正确判断；C选项，((a + b)==(a + a))，即a + b = 2a，移项可得b = a，可以正确判断；D选项，((a ^ b)==0)，异或运算中，当两个数相同，其异或结果为0，所以该表达式可以正确判断a等于b 。",
        "source": "2023年9月认证C++三级真题 单选题第11题"
    },
    {
        "id": "5",
        "type": "single",
        "question": "如果a为char类型的变量，下列哪个表达式可以正确判断“a是大写字母”？（ ）",
        "options": ["A. a - 'A' <= 26", "B. 'A' <= a <= 'Z'", "C. 'A' <= 'a' <= 'Z'", "D. ('A' <= a) && (a <= 'Z')"],
        "correct": "D",
        "explanation": "A选项，a - 'A' <= 26，所有字符与'A'的差值都可能小于等于26，无法准确判断a是大写字母；B选项，在C++语言中，'A' <= a <= 'Z'这种写法不符合语法规则，不能正确判断；C选项，'A' <= 'a' <= 'Z'同样不符合语法，且逻辑错误；D选项，('A' <= a) && (a <= 'Z')，只有当a的ASCII码值在'A'到'Z'之间时，该表达式才为真，能正确判断a是大写字母。",
        "source": "2023年9月认证C++三级真题 单选题第12题"
    },
    {
        "id": "6",
        "type": "single",
        "question": "下面C++代码执行后的输出是（ ）<pre><code>\nint a = 12;\nint result = a >> 2;\ncout << result << endl;</code></pre>",
        "options": ["A. 12", "B. 6", "C. 3", "D. 1"],
        "correct": "C",
        "explanation": "12的二进制表示是1100，右移2位后，变为0011，转换为十进制就是3，所以输出结果为3。",
        "source": "2024年6月GESP C++三级真题 单选题第7题"
    },
    {
        "id": "7",
        "type": "single",
        "question": "下列代码的输出结果是（ ）<pre><code>\nint a = 5;\nint b = 10;\na = a ^ b;\nb = a ^ b;\na = a ^ b;\ncout << \"a = \" << a << \", b = \" << b << endl;</code></pre>",
        "options": ["A. a=5, b=10", "B. a=5, b=5", "C. a=10, b=5", "D. a=10, b=10"],
        "correct": "C",
        "explanation": "异或运算具有交换律和结合律。a = 5（二进制0101），b = 10（二进制1010） 。执行a = a ^ b后，a = 0101 ^ 1010 = 1111；执行b = a ^ b后，b = 1111 ^ 1010 = 0101（即5）；执行a = a ^ b后，a = 1111 ^ 0101 = 1010（即10）。所以最终输出a = 10, b = 5。",
        "source": "2024年6月GESP C++三级真题 单选题第8题"
    },
    {
        "id": "8",
        "type": "single",
        "question": "定义整型变量int a = 3, b = 16，则a|b的值和a + b的关系是（ ）",
        "options": ["A. 大于", "B. 等于", "C. 小于", "D. 等于或小于"],
        "correct": "B",
        "explanation": "3的二进制是0011，16的二进制是10000，a|b即0011 | 10000 = 10011，转换为十进制是19；a + b = 3 + 16 = 19，所以a|b的值和a + b相等。",
        "source": "2024年3月认证C++三级真题 单选题第13题"
    },
    {
        "id": "9",
        "type": "single",
        "question": "定义整数int x = -5，则执行C++代码cout << (x == (x<<1>>1))输出是（ ）",
        "options": ["A. 0", "B. 1", "C. -5", "D. 5"],
        "correct": "B",
        "explanation": "-5的补码表示为1111111111111011，x << 1后为1111111111110110（左移一位，右边补0），再右移1位为1111111111111011（算术右移，左边补符号位1），结果还是-5的补码，所以x == (x<<1>>1)条件成立，输出1。",
        "source": "2024年3月认证C++三级真题 单选题第4题"
    },
   
    {
    "id": "10",
    "type": "single",
    "question": "下面C++代码执行后的输出是（ ）<pre><code>\nint temp = 0;\nfor(int i = 1; i < 7; i++)\n  for(int j = 1; j < 5; j++)\n    if(i / j == 2) temp++;\ncout << temp << endl;</code></pre>",
    "options": ["A. 10", "B. 8", "C. 4", "D. 3"],
    "correct": "C",
    "explanation": "遍历i（1~6）和j（1~4）的所有组合，判断i/j是否等于2（整数除法）：\n- i=2时，j=1 → 2/1=2 ✔️（1次）\n- i=3时，j=1 → 3/1=3 ❌，无满足条件的j\n- i=4时，j=1 → 4/1=4 ❌，j=2 → 4/2=2 ✔️（1次）\n- i=5时，j=1 → 5/1=5 ❌，j=2 → 5/2=2 ✔️（1次）\n- i=6时，j=1 → 6/1=6 ❌，j=2 → 6/2=3 ❌，j=3 → 6/3=2 ✔️（1次）\n满足条件的情况共 **4次**（i=2,j=1；i=4,j=2；i=5,j=2；i=6,j=3），因此temp最终为4，输出4。",
    "source": "2023年12月认证C++三级真题 单选题第4题"
    },
    {
        "id": "11",
        "type": "single",
        "question": "a|10（a与10都是十进制，且二进制表示最高位为1）运算的结果是（ ）",
        "options": ["A. 使a的二进制表示从右往左的第二位为1", "B. 使a的二进制表示从右往左的第一位为0", "C. 使a的二进制表示从右往左第二位为0", "D. 使a的二进制表示最高位为0"],
        "correct": "A",
        "explanation": "10的二进制是1010，与a进行按位或运算时，因为10的从右往左第二位是1，所以无论a该位原本是什么，运算后a的二进制表示从右往左的第二位都会变为1。",
        "source": "2024年12月认证C++ 3级真题 单选题第8题"
    },
    {
        "id": "12",
        "type": "single",
        "question": "补码1111 1101进行运算1111 1101 >> 1以后得到的结果是（ ）",
        "options": ["A. 1111 1100", "B. -2", "C. 1111 1101", "D. 1111 1010"],
        "correct": "B",
        "explanation": "补码11111101进行算术右移1位，高位补符号位1，得到11111110。11111110是-2的补码形式（其原码为10000010），所以结果为-2。",
        "source": "2024年12月认证C++ 3级真题 单选题第6题"
    },
    {
        "id": "13",
        "type": "single",
        "question": "下列关于位运算的说法，正确的是（ ）",
        "options": ["A. 位运算符只能用于整数类型", "B. 位运算的优先级高于算术运算", "C. 按位与运算(&)可以用来判断一个数的奇偶性", "D. 按位异或运算(^)满足交换律但不满足结合律"],
        "correct": "A",
        "explanation": "A选项，位运算主要针对整数类型的数据进行操作，因为位运算是对二进制位进行处理，浮点数等其他类型没有二进制位的概念，所以该选项正确；B选项，位运算的优先级低于算术运算，例如先计算乘除后计算位运算，所以该选项错误；C选项，判断一个数的奇偶性通常用按位与1进行判断（num & 1 == 1则为奇数，num & 1 == 0则为偶数），而不是随意的按位与运算，所以该选项错误；D选项，按位异或运算(^)既满足交换律（a ^ b = b ^ a）也满足结合律（(a ^ b) ^ c = a ^ (b ^ c) ），所以该选项错误。",
        "source": "根据知识点自编题（参考文档知识点综合编写）"
    },
    {
        "id": "14",
        "type": "truefalse",
        "question": "在C++语言中，位运算符也有类似“先乘除、后加减”的优先级规则，使用时应注意合理使用括号。（对/错）",
        "correct": "√",
        "explanation": "位运算符有自己的优先级顺序，不同的位运算符优先级不同，在复杂的表达式中，如果不注意优先级和括号的使用，可能会得到错误的结果，所以使用时应合理使用括号，该说法正确。",
        "source": "2023年9月GESPC++三级试卷解析 判断题第2题"
    },
    {
        "id": "15",
        "type": "truefalse",
        "question": "对于int类型变量a，执行操作(a << 2 >> 2)后的值一定是a。（对/错）",
        "correct": "×",
        "explanation": "当a为负数时，左移操作可能会改变符号位，右移时对于负数是算术右移（高位补符号位1），这可能导致结果与原来的a不同。例如a = -1，二进制表示为11111111（假设为8位），左移2位变为11111100，右移2位变为11111111，结果不再是-1，所以该说法错误。",
        "source": "2024年3月认证C++三级真题 判断题第4题"
    },
    {
        "id": "16",
        "type": "truefalse",
        "question": "在C++语言中，(010<<1)执行结果是100。（对/错）",
        "correct": "×",
        "explanation": "010是八进制表示，转换为十进制是8，8左移1位（即乘以2），结果是16，而不是100，所以该说法错误。",
        "source": "2024年3月认证C++三级真题 判断题第5题"
    },
    {
        "id": "17",
        "type": "truefalse",
        "question": "如果a为int类型的变量，且表达式((a | 3) == 3)的值为true，则说明a在从0到3之间（可能为0、可能为3）。（对/错）",
        "correct": "√",
        "explanation": "((a | 3) == 3)，3的二进制是0011，这说明a的二进制表示中，除了最低两位可能为1外，其他位都为0，所以a的取值范围是0到3 ，该说法正确。",
        "source": "2023年6月GESP C++三级试题解析 判断题第10题"
    },
    {
        "id": "18",
        "type": "single",
        "question": "下面C++代码执行后的输出是（ ）\nint a = 3;\na << 2;\ncout << a << endl;",
        "options": ["A. 3", "B. 6", "C. 9", "D. 12"],
        "correct": "D",
        "explanation": "a <<= 2表示a左移2位，相当于a = a * 2² ，3左移2位后变为12，所以输出12。",
        "source": "根据知识点自编题（参考文档知识点综合编写）"
    }]