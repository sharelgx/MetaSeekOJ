[
  {
    "id": "1",
    "type": "single",
    "question": "高级语言编写的程序需要经过以下( )操作，可以生成在计算机上运行的可执行代码。",
    "options": ["A. 编辑", "B. 保存", "C. 调试", "D. 编译"],
    "correct": "D",
    "explanation": "本题属于考察计算机基础知识中的编辑、编译、解释、调试的概念；其中编辑是编写修改代码，保存是将代码保存下来，调试是测试运行代码，而编译是将源程序翻译成可执行代码。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "2",
    "type": "single",
    "question": "排序算法是稳定的(Stable Sorting)，就是指排序算法可以保证，在待排序数据中有两个相等记录的关键字R和S(R出现在S之前)，在排序后的列表中R也一定在S前。下面关于排序稳定性的描述，正确的是( )。",
    "options": ["A. 冒泡排序是不稳定的。", "B. 插入排序是不稳定的。", "C. 选择排序是不稳定的。", "D. 以上都不正确。"],
    "correct": "C",
    "explanation": "本题属于考察排序的基本概念；冒泡排序、插入排序一般是稳定的，而选择排序一般是不稳定的。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "3",
    "type": "single",
    "question": "下列关于C++语言中指针的叙述，不正确的是( )。",
    "options": ["A. 指针变量中存储的是内存地址。", "B. 定义指针变量时必须指定其指向的类型。", "C. 指针变量只能指向基本类型变量，不能指向指针变量。", "D. 指针变量指向的内存地址不一定能够合法访问。"],
    "correct": "C",
    "explanation": "本题属于考察指针的基本概念；指针变量不仅可以指向基本类型的变量也可以指向其它的指针变量。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "4",
    "type": "single",
    "question": "下列关于C++语言中数组的叙述，不正确的是( )。",
    "options": ["A. 一维数组在内存中一定是连续存放的。", "B. 二维数组是一维数组的一维数组。", "C. 二维数组中的每个一维数组在内存中都是连续存放的。", "D. 二维数组在内存中可以不是连续存放的。"],
    "correct": "D",
    "explanation": "本题属于考察二维数组的基本概念；数组(包括多维数组)在内存中必须要连续存放。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "5",
    "type": "single",
    "question": "下列关于C++语言中函数的叙述，正确的是( )。",
    "options": ["A. 函数必须有名字。", "B. 函数必须有参数。", "C. 函数必须有返回值。", "D. 函数定义必须写在函数调用前。"],
    "correct": "A",
    "explanation": "本题属于考察函数的基本概念；函数可以没有参数和返回值，同时函数定义可以在调用之后，只需要在调用前要加函数声明，但是函数必须要有名字。注：如果了解“匿名函数”概念（该概念超出考纲范围），应注意区分：匿名函数，正式名称为“lambda表达式”，是一种可捕捉参数变量的无命名函数对象，属于“函数对象”的一种，并不属于“函数”范畴。函数对象与函数在使用时经常可以自动相互转换，但二者在实现机制上完全不同。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "6",
    "type": "single",
    "question": "下列关于C++语言中变量的叙述，正确的是( )。",
    "options": ["A. 变量定义后可以一直使用。", "B. 两个变量的变量名不能是相同的。", "C. 两个变量的变量名可以相同，但它们的类型必须是不同的。", "D. 两个变量的变量名可以相同，但它们的作用域必须是不同的。"],
    "correct": "D",
    "explanation": "本题属于考察变量定义域的基本概念；在C++中两个变量可以取相同的变量名，只要它们在不同的作用域下即可。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "7",
    "type": "single",
    "question": "一个二维数组定义为double array[3][10];，则这个二维数组占用内存的大小为( )。",
    "options": ["A. 30", "B. 60", "C. 120", "D. 240"],
    "correct": "D",
    "explanation": "本题属于考察内存的基本概念；double类型的数据占用内存是8字节，array数组共使用了30个double类型的数据，占用内存为30*8=240字节。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "8",
    "type": "single",
    "question": "一个变量定义为int *p = nullptr;，则下列说法正确的是( )。",
    "options": ["A. 该指针变量的类型为int。", "B. 该指针变量指向的类型为int。", "C. 该指针变量指向的内存地址是随机的。", "D. 访问该指针变量指向的内存会出现编译错误。"],
    "correct": "B",
    "explanation": "本题属于考察指针的基本概念。指针变量的类型为int*，A选项错误；nullptr指向的是固定的内存地址0，C选项错误；nullptr指向的内存位置通常不存放有效数据，因此常用来表示未指向有效数据，访问它可能出现运行时错误，但不会出现编译错误，D选项错误。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "9",
    "type": "single",
    "question": "一个二维数组定义为int array[5][3];，则array[1][2]和array[2][1]在内存中的位置相差多少字节？( )",
    "options": ["A. 2字节。", "B. 4字节。", "C. 8字节。", "D. 无法确定。"],
    "correct": "C",
    "explanation": "本题属于考察内存地址的基本概念；array[1][2]和array[2][1]中间差了array[2][0]，相当于差了2个int，也就是8字节。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "10",
    "type": "single",
    "question": "如果a为int类型的变量，且a的值为6，则执行a &= 3 ;之后，a的值会是()。",
    "options": ["A. 3", "B. 9", "C. 2", "D. 7"],
    "correct": "C",
    "explanation": "本题属于考察位运算的基本概念；a &= 3 ;等价于a=a & 3 。&为按位与运算，a的原值为6，6 & 3的结果为2。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "11",
    "type": "single",
    "question": "一个数组定义为int a[5]={1,2,3,4,5};，一个指针定义为int * p=& a[2]，则执行a[1] = *p ;后，数组a中的值会变为()。",
    "options": ["A. {1, 3, 3, 4, 5}", "B. {2, 2, 3, 4, 5}", "C. {1, 2, 2, 4, 5}", "D. {1, 2, 3, 4, 5}"],
    "correct": "A",
    "explanation": "本题属于考察指针的基本概念；首先让指针p指向变量a[2]的内存地址，然后让a[1]=*p，也就是让a[1]=a[2]，所以a数组变为{1, 3, 3, 4, 5}。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "12",
    "type": "single",
    "question": "以下哪个函数声明在调用时可以传递二维数组的名字作为参数？( )",
    "options": ["A. void BubbleSort(int a[][4]);", "B. void BubbleSort(int a[3][]);", "C. void BubbleSort(int a[][]);", "D. void BubbleSort(int **a);"],
    "correct": "A",
    "explanation": "本题属于考察函数参数的基本概念。当把数组作为函数的一个参数时，实际上只传递了数组的首指针。于是，传递多维数组时，只有形式参数的第一维的长度可以省略，形式参数的其他维的长度都不能省略。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "13",
    "type": "single",
    "question": "在下列代码的横线处填写( )，可以使得输出是“20 10”。<pre><code>#include <iostream>\nusing namespace std;\nvoid xchg( {//在此处填入代码\nint t=*x;\n*x=*y;\n*y =t;\n}\nint main(){\ninta=10,b=20;\nxchg(&a,&b);\ncout<<a<<<<b<<endl;\nreturn 0;\n}</code></pre>",
    "options": ["A. int x, int y", "B. int * x, int * y", "C. int a, int b", "D. int & a, int & b"],
    "correct": "B",
    "explanation": "本题属于考察指针的基本概念；题目要求输出20 10，也就是把a和b进行交换，参数中传递了a和b的内存地址，需要使用相应类型的指针来存放。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "14",
    "type": "single",
    "question": "执行以下C++语言程序后，输出结果是( )。<pre><code>#include <iostream>\nusing namespace std;\nint main(){\nint array[3][3];\nfor(inti=0;i<3;i++)\nfor(intj= 0;j<3;j++)\narray[i][j]=i*10+j;\nint sum;\nfor(inti=0;i<3;i++)\nsum += array[i][1];\ncout<<sum<<endl;\nreturn 0;\n}</code></pre>",
    "options": ["A. 3", "B. 30", "C. 33", "D. 无法确定。"],
    "correct": "D",
    "explanation": "本题属于考察变量初始化相关概念；因为sum是在函数内部定义的，所以sum的初始值并不一定是0，也就无法确定最终的输出了。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "15",
    "type": "single",
    "question": "在下列代码的横线处填写( )，完成对有n个int类型元素的数组array由小到大排序。<pre><code>void SelectionSort(int array[],int n){\nint i,j,min, temp;\nfor(i=0;i<n-1;i++){\nmin=i;\nfor(j=i+1;j<n;j++)\nif( )//在此处填入代码\nmin=j;\ntemp =array[min];\narray[min] =array[i];\narray[i]= temp;\n}\n}</code></pre>",
    "options": ["A. array[min] > array[j]", "B. array[min] > array[i]", "C. min > array[j]", "D. min > array[i]"],
    "correct": "A",
    "explanation": "本题属于考察选择排序算法；选择排序每次会从待排序的数据元素中选出最小的一个元素，存放在序列的起始位置，也就是对于所有的i+1<=j<n，找到最小的array[j]。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "16",
    "type": "single",
    "question": "域名是由一串用点分隔的名字来标识互联网上一个计算机或计算机组的名称，CCF编程能力等级认证官方网站的域名是gesp.ccf.org.cn，其中顶级域名是gesp。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察域名相关概念，域名是由两个或两个以上的词构成，中间用点号分隔开，最右边的那个词称为顶级域名，顶级域名是cn。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "17",
    "type": "single",
    "question": "数列1, 1, 2, 3, 5, 8 ... 是以意大利数学家列昂纳多·斐波那契命名的数列，从第三个数开始，每个数是前面两项之和。如果计算该数列的第n项(其中n>3) fib(n)，我们采用如下方法：①令fib(1)=fib(2)=1 ②用循环for i=3 to n分别计算f(i) ③输出fib(n)。这体现了递推的编程思想。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "本题属于考察递推相关概念，递推是按照一定的规律来计算序列中的每个项，本题中规律是从第三个数开始，每个数是前面两项之和，且我们按照从小到大的顺序依次计算数列中的每个项，这和递归的编程思想一致。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "18",
    "type": "single",
    "question": "在C++语言中，函数的参数默认以引用传递方式进行传递。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察函数相关概念，函数的参数默认以值传递方式进行传递。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "19",
    "type": "single",
    "question": "在C++语言中，可以定义四维数组，但在解决实际问题时不可能用到，因为世界是三维的。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察数组相关概念。实际问题中是有可能使用到四维甚至更多维数组的。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "20",
    "type": "single",
    "question": "在C++语言中，一个函数没有被调用时，它的参数不占用内存。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "本题属于考察函数相关概念。函数的参数只有在函数被调用时才会在调用栈上分配对应内存，并在函数返回时回收，这也形成了函数参数的生命周期。因此，函数的参数在没有被调用时不会占用内存。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "21",
    "type": "single",
    "question": "在C++语言中，如果一个函数可能抛出异常，那么一定要在try子句里调用这个函数。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察异常处理相关概念，即使一个函数可能抛出异常，也不一定要在try子句里调用这个函数。可正常调用，异常会向调用更上层抛出，如上层调用在try子句中，则可以在上层捕获处理。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "22",
    "type": "single",
    "question": "如果希望记录10个最长为99字节的字符串，可以将字符串数组定义为<pre><code>char s[100][10];</code></pre>。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察数组相关概念。最长为99个字节的字符串，应申请100个char的数组；要定义10个最长为99字节的字符串，应该将字符串数组定义为char s[10][100]。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "23",
    "type": "single",
    "question": "字符常量<pre><code>'0'</code></pre>和<pre><code>'\\0'</code></pre>是等价的。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "B",
    "explanation": "本题属于考察字符串相关概念，'0'是一个字符常量，它的ASCII码值为48；'\\0'也是一个字符常量，它的ASCII码值为0，通常用来表示字符串或字符数组的结束标志。可见它们不等价。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "24",
    "type": "single",
    "question": "<pre><code>>=</code></pre>和<pre><code>>>=</code></pre>都是C++语言的运算符。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "本题属于考察运算符相关概念。>=是关系运算符大于等于；>>=是复合位右移赋值运算符，a>>=b;等价于a=a>>b。",
    "source": "2023年6月GESP C++四级试题"
  },
  {
    "id": "25",
    "type": "single",
    "question": "由于文件重定向操作，程序员在使用C++语言编写程序时无法确定通过cout输出的内容是否会被输出到屏幕上。",
    "options": ["A. 正确", "B. 错误"],
    "correct": "A",
    "explanation": "本题属于考察文件操作相关概念。使用文件重定向操作后，cout输出的内容可能被写入文件而不是屏幕上。这是由程序用户决定的，编写程序的程序员无法确定。",
    "source": "2023年6月GESP C++四级试题"
  }
]